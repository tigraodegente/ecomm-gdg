---
import Layout from '../../layouts/Layout.astro';
import Button from '../../components/ui/Button.astro';
import CategoryMenu from '../../components/navigation/CategoryMenu.astro';
import productService from '../../services/productService';

// Obter o slug do produto da URL
const { slug } = Astro.params;

// Adicionar logs detalhados para diagn√≥stico
console.log(`-----------------------------------------------------`);
console.log(`URL completa: ${Astro.url.toString()}`);
console.log(`Slug extra√≠do dos par√¢metros: "${slug}"`);
console.log(`Tipo do par√¢metro slug: ${typeof slug}`);
console.log(`Locais do Astro:`, JSON.stringify(Astro.locals, null, 2));
console.log(`-----------------------------------------------------`);

// Verificar se temos um sinal do middleware para usar dados diretos
let product;
const useDirectData = Astro.locals.specialProductSlug?.useDirectData === true;

if (useDirectData) {
  console.log(`üîÑ [slug].astro: Detectado sinalizador do middleware para usar dados est√°ticos diretamente`);
  
  // Produto est√°tico de demonstra√ß√£o
  const sampleProduct = {
    id: '1',
    slug: 'cadeira-de-alimentacao-multifuncional',
    name: 'Cadeira de Alimenta√ß√£o Multifuncional',
    price: 899.90,
    compare_at_price: 1099.90,
    stock: 10,
    sku: 'CAD-ALIM-001',
    category_id: 2,
    category_name: 'Alimenta√ß√£o',
    category_cid: 'alimentacao',
    short_description: 'Cadeira de alimenta√ß√£o multifuncional para o conforto do seu beb√™',
    description: `<p>A cadeira de alimenta√ß√£o multifuncional foi desenvolvida para proporcionar conforto e praticidade na hora das refei√ß√µes do beb√™.</p>
    <p>Com diversas posi√ß√µes de ajuste, bandeja remov√≠vel e cinto de seguran√ßa de 5 pontos.</p>`,
    images: [
      { image_url: 'https://placehold.co/600x400?text=Cadeira-1', alt: 'Cadeira vista 1', is_default: 1 },
      { image_url: 'https://placehold.co/600x400?text=Cadeira-2', alt: 'Cadeira vista 2', is_default: 0 },
    ],
    attributes: [
      { type_display_name: 'Material', value: 'Pl√°stico e metal' },
      { type_display_name: 'Peso m√°ximo', value: '20kg' },
    ]
  };
  
  product = sampleProduct;
  console.log(`üü¢ [slug].astro: Usando dados est√°ticos diretamente (bypassando productService)`);
} else {
  // √öltima tentativa, contornando o problema do bySlug com uma abordagem diferente
  if (slug === 'cadeira-de-alimentacao-multifuncional') {
    console.log(`üü† [slug].astro: Tentativa direta espec√≠fica para cadeira-de-alimentacao-multifuncional`);
    
    // Buscar nos dados est√°ticos pelo slug exato
    // Criamos uma fun√ß√£o local que n√£o depende do productService
    const getProductBySlug = (productSlug) => {
      const sampleProducts = [
        {
          id: '1',
          slug: 'cadeira-de-alimentacao-multifuncional',
          name: 'Cadeira de Alimenta√ß√£o Multifuncional',
          price: 899.90,
          compare_at_price: 1099.90,
          stock: 10,
          sku: 'CAD-ALIM-001',
          category_id: 2,
          category_name: 'Alimenta√ß√£o',
          category_cid: 'alimentacao',
          short_description: 'Cadeira de alimenta√ß√£o multifuncional para o conforto do seu beb√™',
          description: `<p>A cadeira de alimenta√ß√£o multifuncional foi desenvolvida para proporcionar conforto e praticidade na hora das refei√ß√µes do beb√™.</p>
          <p>Com diversas posi√ß√µes de ajuste, bandeja remov√≠vel e cinto de seguran√ßa de 5 pontos.</p>`,
          images: [
            { image_url: 'https://placehold.co/600x400?text=Cadeira-1', alt: 'Cadeira vista 1', is_default: 1 },
            { image_url: 'https://placehold.co/600x400?text=Cadeira-2', alt: 'Cadeira vista 2', is_default: 0 },
          ],
          attributes: [
            { type_display_name: 'Material', value: 'Pl√°stico e metal' },
            { type_display_name: 'Peso m√°ximo', value: '20kg' },
          ]
        }
      ];
      
      return sampleProducts.find(p => p.slug === productSlug) || null;
    };
    
    // Buscar diretamente usando nossa fun√ß√£o local
    product = getProductBySlug(slug);
    console.log(`üü¢ [slug].astro: Produto encontrado com fun√ß√£o local: ${product ? 'SIM' : 'N√ÉO'}`);
  } else {
    // Para outros slugs, tentar a busca normal
    console.log(`üîµ [slug].astro: Usando m√©todo normal para slugs que n√£o s√£o "cadeira-de-alimentacao-multifuncional"`);
    product = productService.getProductById(slug, true);
  }
}

// Se o produto n√£o existir, redirecionar para a p√°gina de produtos
if (!product) {
  return Astro.redirect('/produtos');
}

// Flag para indicar se estamos mostrando um produto substituto (fallback)
const isShowingFallback = product.isFallback === true;

// Verificar se o produto tem variantes
const hasVariants = product.is_variable && product.variants && product.variants.length > 0;

// Formatar pre√ßo
function formatCurrency(value) {
  return new Intl.NumberFormat('pt-BR', {
    style: 'currency',
    currency: 'BRL',
    minimumFractionDigits: 2
  }).format(value);
}

// Calcular desconto em porcentagem
function calculateDiscount(originalPrice, discountedPrice) {
  if (!originalPrice || !discountedPrice || originalPrice <= discountedPrice) {
    return 0;
  }
  
  return Math.round(((originalPrice - discountedPrice) / originalPrice) * 100);
}

// Organizar atributos por tipo para as variantes
const attributeTypes = {};
const variantAttributes = {};

if (hasVariants) {
  // Coletar todos os tipos de atributos das variantes
  product.variants.forEach(variant => {
    if (variant.attributes && variant.attributes.length > 0) {
      variant.attributes.forEach(attr => {
        if (!attributeTypes[attr.type_name]) {
          attributeTypes[attr.type_name] = {
            id: attr.type_id,
            name: attr.type_name,
            displayName: attr.type_display_name,
            values: new Set()
          };
        }
        attributeTypes[attr.type_name].values.add(attr.value);
        
        // Mapear atributos para cada variante
        if (!variantAttributes[variant.id]) {
          variantAttributes[variant.id] = {};
        }
        variantAttributes[variant.id][attr.type_name] = attr.value;
      });
    }
  });
  
  // Converter Sets para Arrays e ordenar
  Object.keys(attributeTypes).forEach(key => {
    attributeTypes[key].values = Array.from(attributeTypes[key].values).sort();
  });
}

// Obter produtos relacionados
const relatedProducts = productService.getRelatedProducts(product.id);

// Adicionar headers para otimiza√ß√£o de cache (apenas para produtos reais, n√£o para fallback)
if (!isShowingFallback) {
  Astro.response.headers.set('Cache-Control', 'public, max-age=300, s-maxage=3600, stale-while-revalidate=86400');
} else {
  // N√£o cachear p√°ginas com produtos de fallback
  Astro.response.headers.set('Cache-Control', 'no-cache, no-store, must-revalidate');
}
---

<Layout title={product.name}>
  <Fragment slot="head">
    {/* Adicionar meta tags para SEO */}
    <meta name="description" content={product.short_description || `${product.name} - Compre agora online!`} />
    {product.images && product.images.length > 0 && (
      <meta property="og:image" content={product.images[0].image_url} />
    )}
    <link rel="canonical" href={`${Astro.url.origin}/produto/${product.slug}`} />

    {/* Schema.org JSON-LD para SEO */}
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org/",
      "@type": "Product",
      "name": product.name,
      "description": product.short_description,
      "image": product.images && product.images.length > 0 ? product.images[0].image_url : null,
      "sku": product.sku,
      "mpn": product.sku,
      "brand": {
        "@type": "Brand",
        "name": product.vendor_name || "Loja Gr√£o de Gente"
      },
      "offers": {
        "@type": "Offer",
        "url": `${Astro.url.origin}/produto/${product.slug}`,
        "priceCurrency": "BRL",
        "price": product.price,
        "priceValidUntil": new Date(new Date().setFullYear(new Date().getFullYear() + 1)).toISOString().split('T')[0],
        "availability": product.stock > 0 ? "https://schema.org/InStock" : "https://schema.org/OutOfStock"
      }
    })} />
  </Fragment>
  <div class="bg-white">
    <CategoryMenu />

    <!-- Breadcrumbs -->
    <div class="container mx-auto px-4 py-2">
      <nav class="text-sm text-gray-500 mb-4">
        <ol class="flex items-center">
          <li>
            <a href="/" class="hover:text-primary-600 transition-colors">Home</a>
          </li>
          <li class="flex items-center">
            <span class="mx-1">/</span>
            <a href="/produtos" class="hover:text-primary-600 transition-colors">Produtos</a>
          </li>
          {product.category_name && (
            <li class="flex items-center">
              <span class="mx-1">/</span>
              <a 
                href={`/produtos?category=${product.category_cid}`} 
                class="hover:text-primary-600 transition-colors"
              >
                {product.category_name}
              </a>
            </li>
          )}
          <li class="flex items-center">
            <span class="mx-1">/</span>
            <span class="text-primary-600 font-medium">{product.name}</span>
          </li>
        </ol>
      </nav>
    </div>
    
    <!-- Produto Principal -->
    <div class="container mx-auto px-4 pb-16">
      {isShowingFallback && (
        <div class="mb-6 bg-yellow-50 border-l-4 border-yellow-400 p-4">
          <div class="flex">
            <div class="flex-shrink-0">
              <svg class="h-5 w-5 text-yellow-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd" />
              </svg>
            </div>
            <div class="ml-3">
              <p class="text-sm text-yellow-700">
                O produto solicitado n√£o foi encontrado. Estamos mostrando um produto de demonstra√ß√£o.
                <a href="/produtos" class="font-medium underline text-yellow-700 hover:text-yellow-600">
                  Ver todos os produtos
                </a>
              </p>
            </div>
          </div>
        </div>
      )}
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        <!-- Galeria de Imagens -->
        <div class="product-gallery space-y-4">
          <!-- Imagem Principal -->
          <div class="main-image border border-gray-200 rounded-lg overflow-hidden bg-gray-50">
            <img 
              id="main-product-image"
              src={product.images && product.images.length > 0 
                ? product.images[0].image_url 
                : "https://via.placeholder.com/600x600?text=Sem+Imagem"}
              alt={product.images && product.images.length > 0 ? product.images[0].alt : product.name}
              class="w-full h-auto object-contain aspect-square"
            />
          </div>
          
          <!-- Miniaturas -->
          {product.images && product.images.length > 1 && (
            <div class="thumbnails flex space-x-2 overflow-x-auto pb-2">
              {product.images.map((image, index) => (
                <button 
                  class={`thumbnail-btn border rounded-md overflow-hidden flex-shrink-0 ${index === 0 ? 'border-primary-500' : 'border-gray-200'}`}
                  data-image-url={image.image_url}
                  data-image-alt={image.alt}
                >
                  <img 
                    src={image.image_url} 
                    alt={image.alt || `${product.name} - Imagem ${index + 1}`}
                    class="w-16 h-16 object-cover"
                  />
                </button>
              ))}
            </div>
          )}
        </div>
        
        <!-- Informa√ß√µes do Produto -->
        <div class="product-info">
          <h1 class="text-2xl md:text-3xl font-bold text-gray-800 mb-2">{product.name}</h1>
          
          <!-- Pre√ßo -->
          <div class="price-container my-4">
            {product.compare_at_price && product.compare_at_price > product.price ? (
              <div class="flex items-center">
                <span class="text-3xl font-bold text-primary-600 mr-2">
                  {formatCurrency(product.price)}
                </span>
                <span class="text-lg text-gray-500 line-through">
                  {formatCurrency(product.compare_at_price)}
                </span>
                <span class="ml-2 px-2 py-1 bg-red-100 text-red-700 text-xs font-medium rounded">
                  -{calculateDiscount(product.compare_at_price, product.price)}% OFF
                </span>
              </div>
            ) : (
              <span class="text-3xl font-bold text-primary-600">
                {formatCurrency(product.price)}
              </span>
            )}
            
            <p class="text-sm text-gray-500 mt-1">
              √† vista ou em at√© 10x de {formatCurrency(product.price / 10)} sem juros
            </p>
          </div>
          
          <!-- SKU e Disponibilidade -->
          <div class="mb-4">
            <p class="text-sm text-gray-500">
              SKU: <span class="font-medium">{product.sku}</span> | 
              Disponibilidade: 
              <span class={`font-medium ${product.stock > 0 ? 'text-green-600' : 'text-red-600'}`}>
                {product.stock > 0 ? 'Em estoque' : 'Indispon√≠vel'}
              </span>
            </p>
          </div>
          
          <!-- Descri√ß√£o Curta -->
          {product.short_description && (
            <div class="my-4">
              <p class="text-gray-700">{product.short_description}</p>
            </div>
          )}
          
          <!-- Sele√ß√£o de Variantes -->
          {hasVariants && (
            <div class="variants-selection my-6 space-y-4">
              {Object.keys(attributeTypes).map(attrType => (
                <div class="variant-type">
                  <h3 class="text-sm font-medium text-gray-700 mb-2">
                    {attributeTypes[attrType].displayName}:
                  </h3>
                  <div class="flex flex-wrap gap-2">
                    {attributeTypes[attrType].values.map(value => (
                      <button 
                        class="variant-option px-4 py-2 border border-gray-300 rounded-md text-sm font-medium hover:border-primary-500 focus:outline-none focus:ring-2 focus:ring-primary-500"
                        data-attribute-type={attrType}
                        data-attribute-value={value}
                      >
                        {value}
                      </button>
                    ))}
                  </div>
                </div>
              ))}
              
              <!-- ID da variante selecionada (hidden) -->
              <input type="hidden" id="selected-variant-id" value="" />
            </div>
          )}
          
          <!-- Quantidade e Bot√µes de A√ß√£o -->
          <div class="my-6 space-y-4">
            <div class="flex items-center">
              <span class="text-sm font-medium text-gray-700 mr-3">Quantidade:</span>
              <div class="custom-number-input h-10 w-32">
                <div class="flex flex-row h-10 w-full rounded-lg relative bg-transparent">
                  <button 
                    class="quantity-btn-down bg-gray-100 text-gray-600 hover:bg-gray-200 h-full w-20 rounded-l cursor-pointer outline-none border border-gray-300"
                  >
                    <span class="m-auto text-xl font-medium">‚àí</span>
                  </button>
                  <input 
                    type="number" 
                    id="quantity-input"
                    class="outline-none focus:outline-none text-center w-full bg-white border-t border-b border-gray-300 text-md hover:text-black focus:text-black md:text-basecursor-default flex items-center text-gray-700"
                    name="quantity"
                    value="1"
                    min="1"
                    max={product.stock}
                  />
                  <button 
                    class="quantity-btn-up bg-gray-100 text-gray-600 hover:bg-gray-200 h-full w-20 rounded-r cursor-pointer border border-gray-300"
                  >
                    <span class="m-auto text-xl font-medium">+</span>
                  </button>
                </div>
              </div>
            </div>
            
            <div class="flex flex-col sm:flex-row gap-3">
              <Button 
                id="add-to-cart-btn"
                variant="primary" 
                class="px-8 py-3 text-base flex-1"
                disabled={product.stock <= 0}
              >
                {product.stock > 0 ? 'Adicionar ao Carrinho' : 'Produto Indispon√≠vel'}
              </Button>
              
              <Button 
                id="add-to-wishlist-btn"
                variant="outline" 
                class="px-3 py-3 text-base"
              >
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z" />
                </svg>
              </Button>
            </div>
          </div>
          
          <!-- Informa√ß√µes do Vendedor -->
          {product.vendor_name && (
            <div class="vendor-info mt-6 p-4 bg-gray-50 rounded-lg">
              <h3 class="text-sm font-medium text-gray-700 mb-2">Vendido e entregue por:</h3>
              <div class="flex items-center">
                {product.vendor_logo ? (
                  <img 
                    src={product.vendor_logo} 
                    alt={product.vendor_name}
                    class="w-10 h-10 rounded-full object-cover mr-3" 
                  />
                ) : (
                  <div class="w-10 h-10 rounded-full bg-primary-100 text-primary-600 flex items-center justify-center mr-3">
                    <span class="font-bold text-lg">{product.vendor_name.charAt(0)}</span>
                  </div>
                )}
                <div>
                  <p class="font-medium">{product.vendor_name}</p>
                  <p class="text-sm text-gray-500">4.5/5 ‚≠ê‚≠ê‚≠ê‚≠ê¬Ω (42 avalia√ß√µes)</p>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>
      
      <!-- Tabs de Informa√ß√µes Adicionais -->
      <div class="product-details-tabs mt-12">
        <div class="border-b border-gray-200">
          <nav class="-mb-px flex space-x-8">
            <button class="tab-btn whitespace-nowrap py-4 px-1 border-b-2 border-primary-500 font-medium text-primary-600" data-tab="description">
              Descri√ß√£o
            </button>
            <button class="tab-btn whitespace-nowrap py-4 px-1 border-b-2 border-transparent font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300" data-tab="specifications">
              Especifica√ß√µes
            </button>
            <button class="tab-btn whitespace-nowrap py-4 px-1 border-b-2 border-transparent font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300" data-tab="reviews">
              Avalia√ß√µes
            </button>
          </nav>
        </div>
        
        <!-- Conte√∫do das Tabs -->
        <div class="tab-content py-6">
          <!-- Tab de Descri√ß√£o -->
          <div id="description-tab" class="tab-pane">
            <div class="prose prose-primary max-w-none">
              <Fragment set:html={product.description} />
            </div>
          </div>
          
          <!-- Tab de Especifica√ß√µes -->
          <div id="specifications-tab" class="tab-pane hidden">
            <table class="min-w-full divide-y divide-gray-200">
              <tbody class="divide-y divide-gray-200">
                {product.attributes && product.attributes.map(attr => (
                  <tr>
                    <td class="px-4 py-3 text-sm font-medium text-gray-900 bg-gray-50 w-1/4">
                      {attr.type_display_name}
                    </td>
                    <td class="px-4 py-3 text-sm text-gray-500">
                      {attr.display_value || attr.value}
                    </td>
                  </tr>
                ))}
                <tr>
                  <td class="px-4 py-3 text-sm font-medium text-gray-900 bg-gray-50 w-1/4">
                    SKU
                  </td>
                  <td class="px-4 py-3 text-sm text-gray-500">
                    {product.sku}
                  </td>
                </tr>
                {product.weight && (
                  <tr>
                    <td class="px-4 py-3 text-sm font-medium text-gray-900 bg-gray-50 w-1/4">
                      Peso
                    </td>
                    <td class="px-4 py-3 text-sm text-gray-500">
                      {product.weight} kg
                    </td>
                  </tr>
                )}
                {product.width && product.height && product.length && (
                  <tr>
                    <td class="px-4 py-3 text-sm font-medium text-gray-900 bg-gray-50 w-1/4">
                      Dimens√µes
                    </td>
                    <td class="px-4 py-3 text-sm text-gray-500">
                      {product.width} √ó {product.height} √ó {product.length} cm
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          </div>
          
          <!-- Tab de Avalia√ß√µes -->
          <div id="reviews-tab" class="tab-pane hidden">
            <div class="space-y-6">
              <div class="flex items-center justify-between">
                <h3 class="text-lg font-medium text-gray-900">Avalia√ß√µes dos Clientes</h3>
                <Button variant="primary" size="sm">Escrever Avalia√ß√£o</Button>
              </div>
              
              <div class="bg-gray-50 p-6 rounded-lg">
                <p class="text-gray-500 text-center">
                  Este produto ainda n√£o possui avalia√ß√µes. Seja o primeiro a avaliar!
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Produtos Relacionados -->
      {relatedProducts && relatedProducts.length > 0 && (
        <div class="related-products mt-16">
          <h2 class="text-2xl font-bold text-gray-800 mb-6">Produtos Relacionados</h2>
          
          <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
            {relatedProducts.map(relatedProduct => (
              <a href={`/produto/${relatedProduct.slug}`} class="group">
                <div class="bg-white rounded-lg border border-gray-200 overflow-hidden transition-shadow hover:shadow-md">
                  <div class="relative pt-[100%]">
                    <img 
                      src={relatedProduct.main_image || "https://via.placeholder.com/300x300?text=Sem+Imagem"} 
                      alt={relatedProduct.name}
                      class="absolute inset-0 w-full h-full object-contain p-4"
                    />
                  </div>
                  <div class="p-4">
                    <h3 class="text-sm font-medium text-gray-900 group-hover:text-primary-600 line-clamp-2">
                      {relatedProduct.name}
                    </h3>
                    <p class="mt-1 text-lg font-bold text-primary-600">
                      {formatCurrency(relatedProduct.price)}
                    </p>
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      )}
    </div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Sele√ß√£o de Imagens
    const mainImage = document.getElementById('main-product-image');
    const thumbnails = document.querySelectorAll('.thumbnail-btn');
    
    thumbnails.forEach(thumbnail => {
      thumbnail.addEventListener('click', function() {
        // Atualizar imagem principal
        if (mainImage) {
          mainImage.src = this.dataset.imageUrl || '';
          mainImage.alt = this.dataset.imageAlt || '';
        }
        
        // Atualizar bordas das miniaturas
        thumbnails.forEach(t => t.classList.remove('border-primary-500'));
        this.classList.add('border-primary-500');
      });
    });
    
    // Controle de quantidade
    const quantityInput = document.getElementById('quantity-input');
    const btnDown = document.querySelector('.quantity-btn-down');
    const btnUp = document.querySelector('.quantity-btn-up');
    
    if (quantityInput && btnDown && btnUp) {
      btnDown.addEventListener('click', function() {
        const currentValue = parseInt(quantityInput.value);
        if (currentValue > 1) {
          quantityInput.value = currentValue - 1;
        }
      });
      
      btnUp.addEventListener('click', function() {
        const currentValue = parseInt(quantityInput.value);
        const max = parseInt(quantityInput.getAttribute('max'));
        if (max && currentValue < max) {
          quantityInput.value = currentValue + 1;
        } else if (!max) {
          quantityInput.value = currentValue + 1;
        }
      });
      
      quantityInput.addEventListener('change', function() {
        const currentValue = parseInt(this.value);
        const max = parseInt(this.getAttribute('max'));
        
        if (currentValue < 1) {
          this.value = 1;
        } else if (max && currentValue > max) {
          this.value = max;
        }
      });
    }
    
    // Tab de Informa√ß√µes
    const tabButtons = document.querySelectorAll('.tab-btn');
    const tabPanes = document.querySelectorAll('.tab-pane');
    
    tabButtons.forEach(button => {
      button.addEventListener('click', function() {
        const tabId = this.dataset.tab;
        
        // Atualizar bot√µes
        tabButtons.forEach(btn => {
          btn.classList.remove('border-primary-500', 'text-primary-600');
          btn.classList.add('border-transparent', 'text-gray-500');
        });
        
        this.classList.remove('border-transparent', 'text-gray-500');
        this.classList.add('border-primary-500', 'text-primary-600');
        
        // Atualizar conte√∫do
        tabPanes.forEach(pane => {
          pane.classList.add('hidden');
        });
        
        document.getElementById(`${tabId}-tab`).classList.remove('hidden');
      });
    });
    
    // L√≥gica para sele√ß√£o de variantes (se houver)
    const variantOptions = document.querySelectorAll('.variant-option');
    const selectedVariantInput = document.getElementById('selected-variant-id');
    
    if (variantOptions.length > 0 && selectedVariantInput) {
      const selectedAttributes = {};
      
      variantOptions.forEach(option => {
        option.addEventListener('click', function() {
          // Atualizar estilo
          const attributeType = this.dataset.attributeType;
          
          // Remover sele√ß√£o anterior do mesmo tipo
          document.querySelectorAll(`.variant-option[data-attribute-type="${attributeType}"]`).forEach(opt => {
            opt.classList.remove('border-primary-500', 'bg-primary-50');
          });
          
          // Adicionar sele√ß√£o a este bot√£o
          this.classList.add('border-primary-500', 'bg-primary-50');
          
          // Atualizar atributos selecionados
          selectedAttributes[attributeType] = this.dataset.attributeValue;
          
          // Verificar se uma variante corresponde √† sele√ß√£o atual
          // Esta l√≥gica depende do formato dos seus dados de variantes
          const variantAttributes = JSON.parse(document.getElementById('variant-data').textContent);
          let matchedVariantId = null;
          
          // Aqui voc√™ implementaria a l√≥gica para encontrar a variante correta
          // baseada nos atributos selecionados
          
          // Atualizar input com a variante selecionada
          selectedVariantInput.value = matchedVariantId;
          
          // Atualizar pre√ßo, estoque, etc. com base na variante selecionada
          // ...
        });
      });
    }
    
    // Bot√µes de adi√ß√£o ao carrinho e lista de desejos
    const addToCartBtn = document.getElementById('add-to-cart-btn');
    const addToWishlistBtn = document.getElementById('add-to-wishlist-btn');
    
    if (addToCartBtn) {
      addToCartBtn.addEventListener('click', function() {
        const quantity = parseInt(document.getElementById('quantity-input').value);
        const variantId = document.getElementById('selected-variant-id')?.value || null;
        
        // Aqui voc√™ implementaria a l√≥gica para adicionar ao carrinho
        console.log('Adicionar ao carrinho:', {
          productId: '{product.id}',
          variantId,
          quantity
        });
        
        // Mostrar mensagem de sucesso
        alert('Produto adicionado ao carrinho!');
      });
    }
    
    if (addToWishlistBtn) {
      addToWishlistBtn.addEventListener('click', function() {
        // Aqui voc√™ implementaria a l√≥gica para adicionar √† lista de desejos
        console.log('Adicionar √† lista de desejos:', {
          productId: '{product.id}'
        });
        
        // Mostrar mensagem de sucesso
        alert('Produto adicionado √† lista de desejos!');
      });
    }
  });
</script>